import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useState } from 'react';
import { classNames } from '../utils/classNames';
const TokenSelector = ({ tokens, selectedToken, onTokenSelect, className, }) => {
    const [isOpen, setIsOpen] = useState(false);
    return (_jsxs("div", { className: classNames('relative', className), children: [_jsxs("button", { type: "button", className: "relative w-full cursor-pointer rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 py-2 pl-3 pr-10 text-left shadow-sm transition-colors duration-200 focus:border-primary-500 focus:outline-none focus:ring-1 focus:ring-primary-500 sm:text-sm", onClick: () => setIsOpen(!isOpen), children: [_jsxs("span", { className: "flex items-center", children: [selectedToken.logoUrl && (_jsx("img", { src: selectedToken.logoUrl, alt: selectedToken.symbol, className: "h-6 w-6 flex-shrink-0 rounded-full" })), _jsx("span", { className: classNames('block truncate', selectedToken.logoUrl && 'ml-3'), children: selectedToken.symbol })] }), _jsx("span", { className: "pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2", children: _jsx("svg", { className: classNames('h-5 w-5 text-gray-400 transition-transform duration-200', isOpen && 'rotate-180'), viewBox: "0 0 20 20", fill: "currentColor", "aria-hidden": "true", children: _jsx("path", { fillRule: "evenodd", d: "M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z", clipRule: "evenodd" }) }) })] }), isOpen && (_jsxs(_Fragment, { children: [_jsx("div", { className: "fixed inset-0 z-10", onClick: () => setIsOpen(false) }), _jsx("div", { className: "absolute z-20 mt-1 max-h-60 w-full overflow-auto rounded-md bg-white dark:bg-gray-800 py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm", children: tokens.map((token) => (_jsxs("div", { className: classNames('relative cursor-pointer select-none py-2 pl-3 pr-9 hover:bg-gray-100 dark:hover:bg-gray-700', selectedToken.symbol === token.symbol
                                ? 'bg-primary-50 dark:bg-primary-900/20 text-primary-900 dark:text-primary-100'
                                : 'text-gray-900 dark:text-gray-100'), onClick: () => {
                                onTokenSelect(token);
                                setIsOpen(false);
                            }, children: [_jsxs("div", { className: "flex items-center", children: [token.logoUrl && (_jsx("img", { src: token.logoUrl, alt: token.symbol, className: "h-6 w-6 flex-shrink-0 rounded-full" })), _jsxs("div", { className: classNames('flex flex-col', token.logoUrl && 'ml-3'), children: [_jsx("span", { className: "block truncate font-medium", children: token.symbol }), _jsx("span", { className: "text-xs text-gray-500 dark:text-gray-400", children: token.name })] })] }), selectedToken.symbol === token.symbol && (_jsx("span", { className: "absolute inset-y-0 right-0 flex items-center pr-4 text-primary-600 dark:text-primary-400", children: _jsx("svg", { className: "h-5 w-5", viewBox: "0 0 20 20", fill: "currentColor", children: _jsx("path", { fillRule: "evenodd", d: "M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z", clipRule: "evenodd" }) }) }))] }, token.symbol))) })] }))] }));
};
export default TokenSelector;
//# sourceMappingURL=TokenSelector.js.map